// 
//  CategoriesPresenter.swift
//  MindValley
//
//  Created by Canh Tran Wizeline on 4/10/20.
//  Copyright © 2020 CanhTran. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation

final class CategoriesPresenter {
    // MARK: - Private Properties

    private unowned let view: CategoriesViewInterface
    private let interactor: CategoriesInteractorInterface
    private let router: CategoriesRouterInterface

    private var categories = [Category]()
    
    // MARK: - LifeCycle

    init(view: CategoriesViewInterface,
         interactor: CategoriesInteractorInterface,
         router: CategoriesRouterInterface) {
        self.view = view
        self.interactor = interactor
        self.router = router
    }

}

// MARK: - CategoriesPresenterInterface

extension CategoriesPresenter: CategoriesPresenterInterface {
    func fetchCategories() {
        interactor.fetchCategories(fromCache: false) { [weak self] (result) in
            guard let self = self else { return }
            switch result {
            case .success(let categories):
                self.categories = categories
                Logger.shared.info(object: categories)
            case .failure(let error):
                Logger.shared.error(object: error)
            }
        }
    }
    
    func numberOfCategories() -> Int {
        return categories.count
    }
}
