// 
//  CategoriesInteractor.swift
//  MindValley
//
//  Created by Canh Tran Wizeline on 4/10/20.
//  Copyright ¬© 2020 CanhTran. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation

final class CategoriesInteractor {
    private typealias CategoriesResponse = [String: [String: [Category]]]
    
    // MARK: - Private Properties
    private let networkClient: NetworkRequestable

    // MARK: - LifeCycle

    init(networkClient: NetworkRequestable = NetworkClient()) {
        self.networkClient = networkClient
    }
}

// MARK: - CategoriesInteractorInterface

extension CategoriesInteractor: CategoriesInteractorInterface {
    func fetchCategories(fromCache: Bool, completion: @escaping (Result<[Category], NetworkError>) -> Void) {
        self.networkClient.fetch(endPoint: ChannelsAPI.fetchCategories,
                                 type: CategoriesResponse.self,
                                 loadFromCache: fromCache) { (result) in
                                    DispatchQueue.main.async {
                                        switch result {
                                        case .success(let resultData):
                                            if let data = resultData[NestedKey.data],
                                                let channels = data[NestedKey.categories] {
                                                completion(.success(channels))
                                            } else {
                                                completion(.success([]))
                                            }
                                        case .failure(let error):
                                            completion(.failure(error))
                                        }
                                    }
        }
    }
}
